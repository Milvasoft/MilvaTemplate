<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MilvaTemplate.Data</name>
    </assembly>
    <members>
        <member name="T:MilvaTemplate.Data.Abstract.IMilvaTemplateRepositoryBase`2">
            <summary>
            Interface for MilvaTemplate repository basea.
            </summary>
        </member>
        <member name="M:MilvaTemplate.Data.Abstract.IMilvaTemplateRepositoryBase`2.GetByIdWithAuditAsync(`1,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,`0}},System.Boolean)">
            <summary>
            Returns one entity by entity Id from database asynchronously.
            </summary>
            <param name="id"></param>
            <param name="conditionExpression"></param>
            <param name="projectionExpression"></param>
            <param name="tracking"></param>
            <returns> The entity found or null. </returns>
        </member>
        <member name="M:MilvaTemplate.Data.Abstract.IMilvaTemplateRepositoryBase`2.GetByIdWithAuditAsync(`1,System.Func{Milvasoft.Helpers.DataAccess.EfCore.IncludeLibrary.IIncludable{`0},Milvasoft.Helpers.DataAccess.EfCore.IncludeLibrary.IIncludable},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,`0}},System.Boolean)">
            <summary>
             Returns one entity which IsDeleted condition is true by entity Id with includes from database asynchronously. If the condition is requested, it also provides that condition. 
            </summary>
            <param name="id"></param>
            <param name="includes"></param>
            <param name="conditionExpression"></param>
            <param name="projectionExpression"></param>
            <param name="tracking"></param>
            <returns> The entity found or null. </returns>
        </member>
        <member name="T:MilvaTemplate.Data.Concrete.MilvaTemplateRepositoryBase`2">
            <summary>
            Concrete class for MilvaTemplate repository basea.
            </summary>
        </member>
        <member name="M:MilvaTemplate.Data.Concrete.MilvaTemplateRepositoryBase`2.#ctor(MilvaTemplate.Data.MilvaTemplateDbContext)">
            <summary>
            Constructor of <c>BillRepository</c> class.
            </summary>
            <param name="dbContext"></param>
        </member>
        <member name="M:MilvaTemplate.Data.Concrete.MilvaTemplateRepositoryBase`2.GetByIdWithAuditAsync(`1,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,`0}},System.Boolean)">
            <summary>
            Returns one entity by entity Id from database asynchronously.
            </summary>
            <param name="id"></param>
            <param name="conditionExpression"></param>
            <param name="projectionExpression"></param>
            <param name="tracking"></param>
            <returns> The entity found or null. </returns>
        </member>
        <member name="M:MilvaTemplate.Data.Concrete.MilvaTemplateRepositoryBase`2.GetByIdWithAuditAsync(`1,System.Func{Milvasoft.Helpers.DataAccess.EfCore.IncludeLibrary.IIncludable{`0},Milvasoft.Helpers.DataAccess.EfCore.IncludeLibrary.IIncludable},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,`0}},System.Boolean)">
            <summary>
            Returns one entity which IsDeleted condition is true by entity Id with includes from database asynchronously. If the condition is requested, it also provides that condition. 
            </summary>
            <param name="id"></param>
            <param name="includes"></param>
            <param name="conditionExpression"></param>
            <param name="projectionExpression"></param>
            <param name="tracking"></param>
            <returns> The entity found or null. </returns>
        </member>
        <member name="T:MilvaTemplate.Data.MilvaTemplateDbContext">
            <summary>
            DbContext class of MilvaTemplate project. This class handles all database operations.
            </summary>
        </member>
        <member name="M:MilvaTemplate.Data.MilvaTemplateDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{MilvaTemplate.Data.MilvaTemplateDbContext},Microsoft.AspNetCore.Http.IHttpContextAccessor,Milvasoft.Helpers.DependencyInjection.IAuditConfiguration)">
            <summary>
            Cunstructor of <see cref="T:MilvaTemplate.Data.MilvaTemplateDbContext"/>
            </summary>
            <param name="options"></param>
            <param name="httpContextAccessor"></param>
            <param name="auditConfiguration"></param>
        </member>
        <member name="M:MilvaTemplate.Data.MilvaTemplateDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Overrided the OnModelCreating for custom configurations to database.
            </summary>
            <param name="modelBuilder"></param>
        </member>
    </members>
</doc>
